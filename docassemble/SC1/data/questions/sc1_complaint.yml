---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
metadata:
  title: >-
    SC-1 Complaint
  short title: >-
    SC-1 Complaint
  description: |-
    This interview helps someone in Alaska file a Small Claims, $2500 or less.
  can_I_use_this_form: |
    If you are a sdf, you can use this interview to ____________.
  before_you_start: |
    This interview will help you file a Small Claims, $2500 or less:.
    
    Before you get started, please gather:
    
    1. 
    1. 
    1. 
    
    When you are finished, you will need to:
    
    1. 
    1.
  maturity: production
  estimated_completion_minutes: 10
  estimated_completion_delta: 5
  tags: []
  authors:
    - Alaska Court System MSB
  original_form: []
  original_form_published_on: 2024-10-01
  allowed_courts: 
    - "Small Claims"
  typical_role: "plaintiff"
  al_weaver_version: "1.11.0"
  generated_on: "2024-11-19"
  languages:
    - en
  jurisdiction: NAM-US-US+MA
  review_date: 2024-11-19
  form_titles:
    - SC-1 Complaint
  form_numbers:
    - SC-1
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "AK"
---
code: |
  github_repo_name =  'docassemble-Sc1Complaint'
---
code: |
  interview_short_title = "File a Small Claims, $2500 or less:"
---
code: |
  al_form_type = "other" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_sc1_complaint: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_sc1_complaint
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Other', 'Small Claims']
  nav.set_section("review_sc1_complaint")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  courtLocation
  corp
  principal
  set_progress(20)
  nearLocation
  res
  signature
  set_progress(40)
  Check_Box2
  plaintiffs.gather()
  defendants.gather()
  interview_order_sc1_complaint = True
---
###################### Main order ######################
#comment: |
#  This block includes the logic for standalone interviews.
#  Delete mandatory: True to include in another interview
#mandatory: True
#code: |
#  al_intro_screen
#  sc1_complaint_intro
#  interview_order_sc1_complaint
#  signature_date
#  # Store anonymous data for analytics / statistics
#  store_variables_snapshot(
#      persistent=True,
#      data={
#          "zip": showifdef("users[0].address.zip"),
#          "reached_interview_end": True,
#      },
#  )
#  sc1_complaint_download
---
id: SC-1 Intro Screen
continue button field: sc1_intro
question: |
  ##CR-234 Online Secured Cash Bond Posting Agreement
subquestion: |
  ## Instructions:
  1.  Answer the interview questions.  Your responses to the questions will be used to create the form.
  2. At the end of the interview, hit “submit” to send your form directly to the court for online bail processing.  You will also be sent a copy of the form to the email address you provide.
---
id: Screen one
question: |
  Screen one
fields:
  - "Courtlocation": courtLocation
    maxlength: 24
  - "Caseno": caseNo
    maxlength: 16
---
id: Screen two
question: |
  Screen two
fields:
  - "Corp": corp
    datatype: yesno
  - "Notcorp": notCorp
    datatype: yesno
---
id: Screen three
question: |
  Screen three
fields:
  - "Principal": principal
    maxlength: 20
  - "Resultof2": resultOf2
    input type: area
    maxlength: 234
  - "Dateoccured": dateOccured
    maxlength: 14
---
id: Screen four
question: |
  Screen four
fields:
  - "Nearlocation": nearLocation
    maxlength: 20
  - "Hashasnot": HasHasNot
    input type: radio
    choices:
      - Choice2: Choice2
      - Choice1: Choice1
---
id: Screen five
question: |
  Screen five
fields:
  - "Res": res
    datatype: yesno
  - "Pers": pers
    datatype: yesno
  - "Business": business
    datatype: yesno
---
id: Screen six
question: |
  Screen six
fields:
  - "Signature": signature
    maxlength: 30
  - "Printname": printName
    maxlength: 28
  - "Datesigned": dateSigned
    maxlength: 15
  - "Address": address
    maxlength: 78
  - "Email": email
    maxlength: 51
  - "Phonenumber": phoneNumber
    maxlength: 24
---
id: Screen seven
question: |
  Screen seven
fields:
  - "Check box2": Check_Box2
    datatype: yesno
  - "Comp": comp
    datatype: yesno
  - "Signer3": signer3
    input type: radio
    choices:
      - Choice1: Choice1
      - Choice2: Choice2
  - "Emailpg3": emailpg3
    maxlength: 30
  - "Namepg3": namepg3
    maxlength: 30
  - "Phonepg3": phonepg3
    maxlength: 12
  - "Addresspg3": addresspg3
    maxlength: 41
---
id: preview sc1_complaint
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_sc1_complaint'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: sc1_complaint_preview_question    
---
code: |
  signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: sc1 complaint review screen
event: review_sc1_complaint
question: |
  Review your answers
review:
  - Edit: courtLocation
    button: |
      **Courtlocation**:
      ${ courtLocation }
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: caseNo
    button: |
      **Caseno**:
      ${ caseNo }
  - Edit: corp
    button: |
      **Corp**:
      ${ word(yesno(corp)) }
  - Edit: notCorp
    button: |
      **Notcorp**:
      ${ word(yesno(notCorp)) }
  - Edit: principal
    button: |
      **Principal**:
      ${ principal }
  - Edit: resultOf2
    button: |
      **Resultof2**:
      > ${ single_paragraph(resultOf2) }
  - Edit: dateOccured
    button: |
      **Dateoccured**:
      ${ dateOccured }
  - Edit: nearLocation
    button: |
      **Nearlocation**:
      ${ nearLocation }
  - Edit: HasHasNot
    button: |
      **Hashasnot**:
      ${ HasHasNot }
  - Edit: res
    button: |
      **Res**:
      ${ word(yesno(res)) }
  - Edit: pers
    button: |
      **Pers**:
      ${ word(yesno(pers)) }
  - Edit: business
    button: |
      **Business**:
      ${ word(yesno(business)) }
  - Edit: signature
    button: |
      **Signature**:
      ${ signature }
  - Edit: printName
    button: |
      **Printname**:
      ${ printName }
  - Edit: dateSigned
    button: |
      **Datesigned**:
      ${ dateSigned }
  - Edit: address
    button: |
      **Address**:
      ${ address }
  - Edit: email
    button: |
      **Email**:
      ${ email }
  - Edit: phoneNumber
    button: |
      **Phonenumber**:
      ${ phoneNumber }
  - Edit: Check_Box2
    button: |
      **Check box2**:
      ${ word(yesno(Check_Box2)) }
  - Edit: comp
    button: |
      **Comp**:
      ${ word(yesno(comp)) }
  - Edit: signer3
    button: |
      **Signer3**:
      ${ signer3 }
  - Edit: emailpg3
    button: |
      **Emailpg3**:
      ${ emailpg3 }
  - Edit: namepg3
    button: |
      **Namepg3**:
      ${ namepg3 }
  - Edit: phonepg3
    button: |
      **Phonepg3**:
      ${ phonepg3 }
  - Edit: addresspg3
    button: |
      **Addresspg3**:
      ${ addresspg3 }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download sc1_complaint
event: sc1_complaint_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_sc1_complaint'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
## ALDocument objects specify the metadata for each template
#objects:
#  - sc1_complaint_Post_interview_instructions: ALDocument.using(title="Instructions", filename="sc1_complaint_next_steps.docx", enabled=True, has_addendum=False)
#  - sc1_complaint_attachment: ALDocument.using(title="SC-1 Complaint", filename="sc1_complaint", enabled=True, has_addendum=False, )
#---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[sc1_complaint_Post_interview_instructions, sc1_complaint_attachment], filename="sc1_complaint", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[sc1_complaint_attachment],  filename="sc1_complaint", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
#attachment:
#  name: Post-interview-Instructions
#  filename: sc1_complaint_next_steps
#  docx template file: sc1_complaint_next_steps.docx
#  variable name: sc1_complaint_Post_interview_instructions[i]
#  skip undefined: True
#  tagged pdf: True
#---
attachment:
  name: sc1 complaint
  filename: sc1_complaint
  variable name: sc1_complaint_attachment[i]
  skip undefined: True
  pdf template file: sc1_complaint.pdf
  fields:
      - "courtLocation": ${ courtLocation }
      - "plaintiff": ${ plaintiffs[0] }
      - "defendant": ${ defendants[0] }
      - "caseNo": ${ caseNo }
      - "corp": ${ corp }
      - "notCorp": ${ notCorp }
      - "principal": ${ principal }
      - "resultOf2": ${ resultOf2 }
      - "dateOccured": ${ dateOccured }
      - "nearLocation": ${ nearLocation }
      - "HasHasNot": ${ HasHasNot }
      - "res": ${ res }
      - "pers": ${ pers }
      - "business": ${ business }
      - "signature": ${ signature }
      - "printName": ${ printName }
      - "dateSigned": ${ dateSigned }
      - "address": ${ address }
      - "email": ${ email }
      - "phoneNumber": ${ phoneNumber }
      - "Check Box2": ${ Check_Box2 }
      - "comp": ${ comp }
      - "signer3": ${ signer3 }
      - "emailpg3": ${ emailpg3 }
      - "namepg3": ${ namepg3 }
      - "phonepg3": ${ phonepg3 }
      - "addresspg3": ${ addresspg3 }



